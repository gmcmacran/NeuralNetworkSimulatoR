% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_classification_data.R
\name{simulate_classification_data}
\alias{simulate_classification_data}
\title{Simulate data for a Neural Network Structure.}
\usage{
simulate_classification_data(rows = 1000, N = 5, U = 5, C = 0,
  matrices, activations)
}
\arguments{
\item{rows}{An integer scaler. The number of rows in simulated data.}

\item{N}{An integer scaler. The number of normal random variables in X.}

\item{U}{An integer scaler. The number of uniform random variables in X.}

\item{C}{An integer scaler. The number of binary random variables in X.}

\item{matrices}{A list. Each element is a matrix defining the structure the layer.}

\item{activations}{A list. Each element is a activation function.}
}
\value{
A matrix containing predictor variables and a response variable.
}
\description{
Simulate data for a Neural Network Structure.
}
\examples{
library(NeuralNetworkSimulatoR)

# Logistic regression with weights .1, .2, and .3
M <- list(matrix(c(.1, .2, .3), nrow = 3, ncol = 1))
A <- list(sigmoid_R)
simData <- simulate_classification_data(
  rows = 1000L,
  N = 3L, U = 0L, C = 0L,
  matrices = M, activations = A
)
rm(A, M)

# Complex network
# 10 nodes in first hidden layer. Activation relu
# 5 nodes in second hidden layer  Activation sigmoid_R

M <- list(matrix(1:10, nrow = 10, ncol = 5), matrix(1:5, nrow = 5, ncol = 1))
A <- list(relu_R, sigmoid_R)
simData <- simulate_classification_data(
  rows = 1000L,
  N = 5L, U = 5L, C = 0L,
  matrices = M, activations = A
)
rm(A, M)

rm(simData)
}
